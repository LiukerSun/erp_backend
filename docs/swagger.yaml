basePath: /api
definitions:
  internal_modules_sample_model.Pagination:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  internal_modules_sample_model.StoreInfo:
    properties:
      id:
        type: integer
      is_active:
        type: boolean
      is_featured:
        type: boolean
      name:
        type: string
      remark:
        type: string
      supplier_id:
        type: integer
    type: object
  internal_modules_store_model.Pagination:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  internal_modules_store_model.Supplier:
    properties:
      id:
        type: integer
      name:
        type: string
      remark:
        type: string
    type: object
  internal_modules_supplier_model.Pagination:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  internal_modules_supplier_model.StoreInfo:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      remark:
        type: string
      supplier_id:
        type: integer
      updated_at:
        type: string
    type: object
  internal_modules_user_model.Pagination:
    properties:
      limit:
        type: integer
      page:
        type: integer
      total:
        type: integer
    type: object
  model.AdminCreateUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      role:
        enum:
        - user
        - admin
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - role
    - username
    type: object
  model.BatchUpdateSamplesRequest:
    properties:
      can_modify_stock:
        type: boolean
      has_link:
        type: boolean
      is_offline:
        type: boolean
      sample_ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - sample_ids
    type: object
  model.BatchUpdateSamplesResponse:
    properties:
      failed_count:
        type: integer
      message:
        type: string
      success_count:
        type: integer
      total_count:
        type: integer
    type: object
  model.ChangePasswordRequest:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  model.CreateSampleRequest:
    properties:
      can_modify_stock:
        type: boolean
      has_link:
        type: boolean
      is_offline:
        type: boolean
      item_code:
        maxLength: 100
        minLength: 1
        type: string
      store_id:
        type: integer
      supplier_id:
        type: integer
    required:
    - item_code
    - store_id
    - supplier_id
    type: object
  model.CreateStoreRequest:
    properties:
      default_commission_rate:
        description: 默认佣金率 0-100 1 表示1%
        type: integer
      is_featured:
        type: boolean
      name:
        maxLength: 100
        minLength: 1
        type: string
      remark:
        maxLength: 500
        type: string
      supplier_id:
        type: integer
    required:
    - name
    - supplier_id
    type: object
  model.CreateSupplierRequest:
    properties:
      name:
        maxLength: 100
        minLength: 1
        type: string
      remark:
        maxLength: 500
        type: string
    required:
    - name
    type: object
  model.ExcelParseResponse:
    properties:
      message:
        description: 消息
        type: string
      products:
        description: 商品列表
        items:
          $ref: '#/definitions/model.ProductInfo'
        type: array
      success:
        description: 是否成功
        type: boolean
      total:
        description: 总数
        type: integer
      upload_at:
        description: 上传时间
        type: string
    type: object
  model.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.LoginResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/model.Response'
    type: object
  model.ProductInfo:
    properties:
      audit_status:
        description: 商品审核状态
        type: string
      category_level1:
        description: 一级类目
        type: string
      category_level2:
        description: 二级类目
        type: string
      category_level3:
        description: 三级类目
        type: string
      category_level4:
        description: 四级类目
        type: string
      color:
        description: 颜色分类
        type: string
      commission_rate:
        description: 佣金比例
        type: string
      delivery_time:
        description: 商品发货时间（原始字段）
        type: string
      in_stock:
        description: 现货可售
        type: string
      merchant_code:
        description: 商家编码
        type: string
      merchant_sku_code:
        description: 商家SKU编码
        type: string
      pre_sale_stock:
        description: 预售库存
        type: string
      price:
        description: 商品价格
        type: string
      product_code:
        description: 货号
        type: string
      product_group:
        description: 商品分组
        type: string
      product_id:
        description: 商品ID
        type: string
      product_link:
        description: 商品链接
        type: string
      product_name:
        description: 商品名称
        type: string
      product_spec:
        description: 商品规格
        type: string
      product_type:
        description: 商品类型
        type: string
      sales_volume:
        description: 销量
        type: string
      shipping_time:
        description: 发货时效（从ProductSpec中提取）
        type: string
      size:
        description: 尺码大小
        type: string
      spec_id:
        description: 规格ID（SKUID）
        type: string
      tiered_stock:
        description: 阶梯库存
        type: string
    type: object
  model.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  model.RefreshTokenResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
    type: object
  model.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  model.Response:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      role:
        type: string
      username:
        type: string
    type: object
  model.SampleListResponse:
    properties:
      pagination:
        $ref: '#/definitions/internal_modules_sample_model.Pagination'
      samples:
        items:
          $ref: '#/definitions/model.SampleResponse'
        type: array
    type: object
  model.SampleResponse:
    properties:
      can_modify_stock:
        type: boolean
      created_at:
        type: string
      has_link:
        type: boolean
      id:
        type: integer
      is_offline:
        type: boolean
      item_code:
        type: string
      store:
        $ref: '#/definitions/internal_modules_sample_model.StoreInfo'
      store_id:
        type: integer
      supplier:
        $ref: '#/definitions/model.SupplierInfo'
      supplier_id:
        type: integer
      updated_at:
        type: string
    type: object
  model.StoreListResponse:
    properties:
      pagination:
        $ref: '#/definitions/internal_modules_store_model.Pagination'
      stores:
        items:
          $ref: '#/definitions/model.StoreResponse'
        type: array
    type: object
  model.StoreResponse:
    properties:
      created_at:
        type: string
      default_commission_rate:
        description: 默认佣金率 0-100 1 表示1%
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_featured:
        type: boolean
      name:
        type: string
      remark:
        type: string
      supplier:
        $ref: '#/definitions/internal_modules_store_model.Supplier'
      supplier_id:
        type: integer
      updated_at:
        type: string
    type: object
  model.SupplierInfo:
    properties:
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      remark:
        type: string
    type: object
  model.SupplierListResponse:
    properties:
      pagination:
        $ref: '#/definitions/internal_modules_supplier_model.Pagination'
      suppliers:
        items:
          $ref: '#/definitions/model.SupplierResponse'
        type: array
    type: object
  model.SupplierResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
      remark:
        type: string
      stores:
        items:
          $ref: '#/definitions/internal_modules_supplier_model.StoreInfo'
        type: array
      updated_at:
        type: string
    type: object
  model.UpdateSampleRequest:
    properties:
      can_modify_stock:
        type: boolean
      has_link:
        type: boolean
      is_offline:
        type: boolean
      item_code:
        maxLength: 100
        minLength: 1
        type: string
      store_id:
        type: integer
      supplier_id:
        type: integer
    required:
    - item_code
    - store_id
    - supplier_id
    type: object
  model.UpdateStoreRequest:
    properties:
      default_commission_rate:
        description: 默认佣金率 0-100 1 表示1%
        type: integer
      is_active:
        type: boolean
      is_featured:
        type: boolean
      name:
        maxLength: 100
        minLength: 1
        type: string
      remark:
        maxLength: 500
        type: string
      supplier_id:
        type: integer
    required:
    - name
    - supplier_id
    type: object
  model.UpdateSupplierRequest:
    properties:
      is_active:
        type: boolean
      name:
        maxLength: 100
        minLength: 1
        type: string
      remark:
        maxLength: 500
        type: string
    required:
    - name
    type: object
  model.UserListResponse:
    properties:
      pagination:
        $ref: '#/definitions/internal_modules_user_model.Pagination'
      users:
        items:
          $ref: '#/definitions/model.Response'
        type: array
    type: object
  response.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 这是一个基于 Go 语言构建的企业资源规划（ERP）后端系统，使用 JWT 进行用户认证，PostgreSQL 作为数据库。API接口按功能模块分组，提供统一的路径结构。
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: ERP 后端系统 API
  version: "1.0"
paths:
  /excel/parse:
    post:
      consumes:
      - multipart/form-data
      description: 上传Excel文件并解析为JSON格式返回
      parameters:
      - description: Excel文件
        in: formData
        name: file
        required: true
        type: file
      - description: Sheet名称（可选）
        in: formData
        name: sheet_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.ExcelParseResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 解析Excel文件
      tags:
      - Excel
  /samples:
    get:
      consumes:
      - application/json
      description: 获取样品列表，支持分页、搜索、排序、筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      - description: 搜索关键词（货号）
        in: query
        name: search
        type: string
      - description: 供应商ID筛选
        in: query
        name: supplier_id
        type: integer
      - description: 店铺ID筛选
        in: query
        name: store_id
        type: integer
      - description: 是否制作链接筛选
        in: query
        name: has_link
        type: boolean
      - description: 是否下架筛选
        in: query
        name: is_offline
        type: boolean
      - description: 是否可修改库存筛选
        in: query
        name: can_modify_stock
        type: boolean
      - default: '"created_at DESC"'
        description: 排序字段
        in: query
        name: order_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.SampleListResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取样品列表
      tags:
      - 样品管理
    post:
      consumes:
      - application/json
      description: 创建新的样品
      parameters:
      - description: 样品信息
        in: body
        name: sample
        required: true
        schema:
          $ref: '#/definitions/model.CreateSampleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.SampleResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 创建样品
      tags:
      - 样品管理
  /samples/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定样品（软删除）
      parameters:
      - description: 样品ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
      summary: 删除样品
      tags:
      - 样品管理
    get:
      consumes:
      - application/json
      description: 根据ID获取样品详细信息
      parameters:
      - description: 样品ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.SampleResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取样品详情
      tags:
      - 样品管理
    put:
      consumes:
      - application/json
      description: 更新样品信息
      parameters:
      - description: 样品ID
        in: path
        name: id
        required: true
        type: integer
      - description: 样品更新信息
        in: body
        name: sample
        required: true
        schema:
          $ref: '#/definitions/model.UpdateSampleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.SampleResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
      summary: 更新样品
      tags:
      - 样品管理
  /samples/batch-update:
    patch:
      consumes:
      - application/json
      description: 批量更新样品的制作链接、下架状态、库存修改权限
      parameters:
      - description: 批量更新请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.BatchUpdateSamplesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.BatchUpdateSamplesResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 批量更新样品状态
      tags:
      - 样品管理
  /stores:
    get:
      consumes:
      - application/json
      description: 获取店铺列表，支持分页、搜索、排序、筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      - description: 搜索关键词（名称）
        in: query
        name: search
        type: string
      - description: 供应商ID筛选
        in: query
        name: supplier_id
        type: integer
      - description: 活跃状态筛选
        in: query
        name: is_active
        type: boolean
      - description: 精选状态筛选
        in: query
        name: is_featured
        type: boolean
      - default: '"created_at DESC"'
        description: 排序字段
        in: query
        name: order_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.StoreListResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取店铺列表
      tags:
      - 店铺管理
    post:
      consumes:
      - application/json
      description: 创建新的店铺
      parameters:
      - description: 店铺信息
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/model.CreateStoreRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.StoreResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 创建店铺
      tags:
      - 店铺管理
  /stores/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定店铺（软删除）
      parameters:
      - description: 店铺ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
      summary: 删除店铺
      tags:
      - 店铺管理
    get:
      consumes:
      - application/json
      description: 根据ID获取店铺详细信息
      parameters:
      - description: 店铺ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.StoreResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取店铺详情
      tags:
      - 店铺管理
    put:
      consumes:
      - application/json
      description: 更新店铺信息
      parameters:
      - description: 店铺ID
        in: path
        name: id
        required: true
        type: integer
      - description: 店铺更新信息
        in: body
        name: store
        required: true
        schema:
          $ref: '#/definitions/model.UpdateStoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.StoreResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
      summary: 更新店铺
      tags:
      - 店铺管理
  /suppliers:
    get:
      consumes:
      - application/json
      description: 获取供应商列表，支持分页、搜索、排序、筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      - description: 搜索关键词（名称、备注）
        in: query
        name: search
        type: string
      - default: true
        description: 是否包含关联店铺
        in: query
        name: include_stores
        type: boolean
      - description: 活跃状态筛选
        in: query
        name: is_active
        type: boolean
      - default: '"created_at DESC"'
        description: 排序字段
        in: query
        name: order_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.SupplierListResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取供应商列表
      tags:
      - 供应商管理
    post:
      consumes:
      - application/json
      description: 创建新的供应商
      parameters:
      - description: 供应商信息
        in: body
        name: supplier
        required: true
        schema:
          $ref: '#/definitions/model.CreateSupplierRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.SupplierResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: 创建供应商
      tags:
      - 供应商管理
  /suppliers/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定供应商（软删除）
      parameters:
      - description: 供应商ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
      summary: 删除供应商
      tags:
      - 供应商管理
    get:
      consumes:
      - application/json
      description: 根据ID获取供应商详细信息，可选择是否包含关联的店铺
      parameters:
      - description: 供应商ID
        in: path
        name: id
        required: true
        type: integer
      - default: true
        description: 是否包含关联店铺
        in: query
        name: include_stores
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.SupplierResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
      summary: 获取供应商详情
      tags:
      - 供应商管理
    put:
      consumes:
      - application/json
      description: 更新供应商信息
      parameters:
      - description: 供应商ID
        in: path
        name: id
        required: true
        type: integer
      - description: 供应商更新信息
        in: body
        name: supplier
        required: true
        schema:
          $ref: '#/definitions/model.UpdateSupplierRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.SupplierResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
      summary: 更新供应商
      tags:
      - 供应商管理
  /user/admin/users:
    get:
      consumes:
      - application/json
      description: 获取所有用户列表（需要管理员权限）
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.UserListResponse'
              type: object
        "401":
          description: 未授权
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "403":
          description: 权限不足
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 获取用户列表
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: 管理员创建新用户账户
      parameters:
      - description: 用户创建信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.AdminCreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Response'
              type: object
        "400":
          description: 请求参数错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "401":
          description: 未授权
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "403":
          description: 权限不足
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "409":
          description: 用户已存在
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: 服务器内部错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 管理员创建用户
      tags:
      - Admin
  /user/change_password:
    post:
      consumes:
      - application/json
      description: 修改当前登录用户的密码
      parameters:
      - description: 密码修改信息
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/model.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 密码修改成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 请求参数错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "401":
          description: 原密码错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: 服务器内部错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 修改密码
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录并获取JWT令牌
      parameters:
      - description: 用户登录信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.LoginResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "401":
          description: 用户名或密码错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: 服务器内部错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
      summary: 用户登录
      tags:
      - User
  /user/profile:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的详细信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Response'
              type: object
        "401":
          description: 未授权
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "404":
          description: 用户不存在
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: 获取用户信息
      tags:
      - User
  /user/refresh:
    post:
      consumes:
      - application/json
      description: 使用刷新token获取新的访问token
      parameters:
      - description: 刷新token信息
        in: body
        name: refresh
        required: true
        schema:
          $ref: '#/definitions/model.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 刷新成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.RefreshTokenResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "401":
          description: 无效的刷新token
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: 服务器内部错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
      summary: 刷新访问token
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: 创建新用户账户
      parameters:
      - description: 用户注册信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Response'
              type: object
        "400":
          description: 请求参数错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "409":
          description: 用户已存在
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
        "500":
          description: 服务器内部错误
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                error:
                  type: string
              type: object
      summary: 用户注册
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: 输入 "Bearer " 加上 JWT token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: 用户管理相关接口，包括注册、登录、资料管理等
  name: User
- description: Excel文件上传和解析相关接口
  name: Excel
