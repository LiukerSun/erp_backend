// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: proto/excel.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 解析Excel请求
type ParseExcelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExcelData     []byte                 `protobuf:"bytes,1,opt,name=excel_data,json=excelData,proto3" json:"excel_data,omitempty"` // Excel文件的二进制数据
	SheetName     string                 `protobuf:"bytes,2,opt,name=sheet_name,json=sheetName,proto3" json:"sheet_name,omitempty"` // Sheet名称（可选，如果为空则使用第一个sheet）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseExcelRequest) Reset() {
	*x = ParseExcelRequest{}
	mi := &file_proto_excel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseExcelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseExcelRequest) ProtoMessage() {}

func (x *ParseExcelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_excel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseExcelRequest.ProtoReflect.Descriptor instead.
func (*ParseExcelRequest) Descriptor() ([]byte, []int) {
	return file_proto_excel_proto_rawDescGZIP(), []int{0}
}

func (x *ParseExcelRequest) GetExcelData() []byte {
	if x != nil {
		return x.ExcelData
	}
	return nil
}

func (x *ParseExcelRequest) GetSheetName() string {
	if x != nil {
		return x.SheetName
	}
	return ""
}

// 解析Excel响应
type ParseExcelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Products      []*ProductInfo         `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParseExcelResponse) Reset() {
	*x = ParseExcelResponse{}
	mi := &file_proto_excel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseExcelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseExcelResponse) ProtoMessage() {}

func (x *ParseExcelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_excel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseExcelResponse.ProtoReflect.Descriptor instead.
func (*ParseExcelResponse) Descriptor() ([]byte, []int) {
	return file_proto_excel_proto_rawDescGZIP(), []int{1}
}

func (x *ParseExcelResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ParseExcelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ParseExcelResponse) GetProducts() []*ProductInfo {
	if x != nil {
		return x.Products
	}
	return nil
}

// 商品信息
type ProductInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProductId       string                 `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`                      // 商品ID
	ProductName     string                 `protobuf:"bytes,2,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`                // 商品名称
	CategoryLevel1  string                 `protobuf:"bytes,3,opt,name=category_level1,json=categoryLevel1,proto3" json:"category_level1,omitempty"`       // 一级类目
	CategoryLevel2  string                 `protobuf:"bytes,4,opt,name=category_level2,json=categoryLevel2,proto3" json:"category_level2,omitempty"`       // 二级类目
	CategoryLevel3  string                 `protobuf:"bytes,5,opt,name=category_level3,json=categoryLevel3,proto3" json:"category_level3,omitempty"`       // 三级类目
	CategoryLevel4  string                 `protobuf:"bytes,6,opt,name=category_level4,json=categoryLevel4,proto3" json:"category_level4,omitempty"`       // 四级类目
	ProductType     string                 `protobuf:"bytes,7,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`                // 商品类型
	ProductGroup    string                 `protobuf:"bytes,8,opt,name=product_group,json=productGroup,proto3" json:"product_group,omitempty"`             // 商品分组
	MerchantCode    string                 `protobuf:"bytes,9,opt,name=merchant_code,json=merchantCode,proto3" json:"merchant_code,omitempty"`             // 商家编码
	MerchantSkuCode string                 `protobuf:"bytes,10,opt,name=merchant_sku_code,json=merchantSkuCode,proto3" json:"merchant_sku_code,omitempty"` // 商家SKU编码
	SpecId          string                 `protobuf:"bytes,11,opt,name=spec_id,json=specId,proto3" json:"spec_id,omitempty"`                              // 规格ID（SKUID）
	ProductSpec     string                 `protobuf:"bytes,12,opt,name=product_spec,json=productSpec,proto3" json:"product_spec,omitempty"`               // 商品规格
	DeliveryTime    string                 `protobuf:"bytes,13,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`            // 商品发货时间
	Price           string                 `protobuf:"bytes,14,opt,name=price,proto3" json:"price,omitempty"`                                              // 商品价格
	InStock         string                 `protobuf:"bytes,15,opt,name=in_stock,json=inStock,proto3" json:"in_stock,omitempty"`                           // 现货可售
	PreSaleStock    string                 `protobuf:"bytes,16,opt,name=pre_sale_stock,json=preSaleStock,proto3" json:"pre_sale_stock,omitempty"`          // 预售库存
	TieredStock     string                 `protobuf:"bytes,17,opt,name=tiered_stock,json=tieredStock,proto3" json:"tiered_stock,omitempty"`               // 阶梯库存
	SalesVolume     string                 `protobuf:"bytes,18,opt,name=sales_volume,json=salesVolume,proto3" json:"sales_volume,omitempty"`               // 销量
	CommissionRate  string                 `protobuf:"bytes,19,opt,name=commission_rate,json=commissionRate,proto3" json:"commission_rate,omitempty"`      // 佣金比例
	AuditStatus     string                 `protobuf:"bytes,20,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"`               // 商品审核状态
	ProductLink     string                 `protobuf:"bytes,21,opt,name=product_link,json=productLink,proto3" json:"product_link,omitempty"`               // 商品链接
	ProductCode     string                 `protobuf:"bytes,22,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"`               // 货号
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ProductInfo) Reset() {
	*x = ProductInfo{}
	mi := &file_proto_excel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfo) ProtoMessage() {}

func (x *ProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_excel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfo.ProtoReflect.Descriptor instead.
func (*ProductInfo) Descriptor() ([]byte, []int) {
	return file_proto_excel_proto_rawDescGZIP(), []int{2}
}

func (x *ProductInfo) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductInfo) GetCategoryLevel1() string {
	if x != nil {
		return x.CategoryLevel1
	}
	return ""
}

func (x *ProductInfo) GetCategoryLevel2() string {
	if x != nil {
		return x.CategoryLevel2
	}
	return ""
}

func (x *ProductInfo) GetCategoryLevel3() string {
	if x != nil {
		return x.CategoryLevel3
	}
	return ""
}

func (x *ProductInfo) GetCategoryLevel4() string {
	if x != nil {
		return x.CategoryLevel4
	}
	return ""
}

func (x *ProductInfo) GetProductType() string {
	if x != nil {
		return x.ProductType
	}
	return ""
}

func (x *ProductInfo) GetProductGroup() string {
	if x != nil {
		return x.ProductGroup
	}
	return ""
}

func (x *ProductInfo) GetMerchantCode() string {
	if x != nil {
		return x.MerchantCode
	}
	return ""
}

func (x *ProductInfo) GetMerchantSkuCode() string {
	if x != nil {
		return x.MerchantSkuCode
	}
	return ""
}

func (x *ProductInfo) GetSpecId() string {
	if x != nil {
		return x.SpecId
	}
	return ""
}

func (x *ProductInfo) GetProductSpec() string {
	if x != nil {
		return x.ProductSpec
	}
	return ""
}

func (x *ProductInfo) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

func (x *ProductInfo) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *ProductInfo) GetInStock() string {
	if x != nil {
		return x.InStock
	}
	return ""
}

func (x *ProductInfo) GetPreSaleStock() string {
	if x != nil {
		return x.PreSaleStock
	}
	return ""
}

func (x *ProductInfo) GetTieredStock() string {
	if x != nil {
		return x.TieredStock
	}
	return ""
}

func (x *ProductInfo) GetSalesVolume() string {
	if x != nil {
		return x.SalesVolume
	}
	return ""
}

func (x *ProductInfo) GetCommissionRate() string {
	if x != nil {
		return x.CommissionRate
	}
	return ""
}

func (x *ProductInfo) GetAuditStatus() string {
	if x != nil {
		return x.AuditStatus
	}
	return ""
}

func (x *ProductInfo) GetProductLink() string {
	if x != nil {
		return x.ProductLink
	}
	return ""
}

func (x *ProductInfo) GetProductCode() string {
	if x != nil {
		return x.ProductCode
	}
	return ""
}

var File_proto_excel_proto protoreflect.FileDescriptor

const file_proto_excel_proto_rawDesc = "" +
	"\n" +
	"\x11proto/excel.proto\x12\x05excel\"Q\n" +
	"\x11ParseExcelRequest\x12\x1d\n" +
	"\n" +
	"excel_data\x18\x01 \x01(\fR\texcelData\x12\x1d\n" +
	"\n" +
	"sheet_name\x18\x02 \x01(\tR\tsheetName\"x\n" +
	"\x12ParseExcelResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12.\n" +
	"\bproducts\x18\x03 \x03(\v2\x12.excel.ProductInfoR\bproducts\"\x9c\x06\n" +
	"\vProductInfo\x12\x1d\n" +
	"\n" +
	"product_id\x18\x01 \x01(\tR\tproductId\x12!\n" +
	"\fproduct_name\x18\x02 \x01(\tR\vproductName\x12'\n" +
	"\x0fcategory_level1\x18\x03 \x01(\tR\x0ecategoryLevel1\x12'\n" +
	"\x0fcategory_level2\x18\x04 \x01(\tR\x0ecategoryLevel2\x12'\n" +
	"\x0fcategory_level3\x18\x05 \x01(\tR\x0ecategoryLevel3\x12'\n" +
	"\x0fcategory_level4\x18\x06 \x01(\tR\x0ecategoryLevel4\x12!\n" +
	"\fproduct_type\x18\a \x01(\tR\vproductType\x12#\n" +
	"\rproduct_group\x18\b \x01(\tR\fproductGroup\x12#\n" +
	"\rmerchant_code\x18\t \x01(\tR\fmerchantCode\x12*\n" +
	"\x11merchant_sku_code\x18\n" +
	" \x01(\tR\x0fmerchantSkuCode\x12\x17\n" +
	"\aspec_id\x18\v \x01(\tR\x06specId\x12!\n" +
	"\fproduct_spec\x18\f \x01(\tR\vproductSpec\x12#\n" +
	"\rdelivery_time\x18\r \x01(\tR\fdeliveryTime\x12\x14\n" +
	"\x05price\x18\x0e \x01(\tR\x05price\x12\x19\n" +
	"\bin_stock\x18\x0f \x01(\tR\ainStock\x12$\n" +
	"\x0epre_sale_stock\x18\x10 \x01(\tR\fpreSaleStock\x12!\n" +
	"\ftiered_stock\x18\x11 \x01(\tR\vtieredStock\x12!\n" +
	"\fsales_volume\x18\x12 \x01(\tR\vsalesVolume\x12'\n" +
	"\x0fcommission_rate\x18\x13 \x01(\tR\x0ecommissionRate\x12!\n" +
	"\faudit_status\x18\x14 \x01(\tR\vauditStatus\x12!\n" +
	"\fproduct_link\x18\x15 \x01(\tR\vproductLink\x12!\n" +
	"\fproduct_code\x18\x16 \x01(\tR\vproductCode2V\n" +
	"\x11ExcelParseService\x12A\n" +
	"\n" +
	"ParseExcel\x12\x18.excel.ParseExcelRequest\x1a\x19.excel.ParseExcelResponseB\vZ\terp/protob\x06proto3"

var (
	file_proto_excel_proto_rawDescOnce sync.Once
	file_proto_excel_proto_rawDescData []byte
)

func file_proto_excel_proto_rawDescGZIP() []byte {
	file_proto_excel_proto_rawDescOnce.Do(func() {
		file_proto_excel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_excel_proto_rawDesc), len(file_proto_excel_proto_rawDesc)))
	})
	return file_proto_excel_proto_rawDescData
}

var file_proto_excel_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_excel_proto_goTypes = []any{
	(*ParseExcelRequest)(nil),  // 0: excel.ParseExcelRequest
	(*ParseExcelResponse)(nil), // 1: excel.ParseExcelResponse
	(*ProductInfo)(nil),        // 2: excel.ProductInfo
}
var file_proto_excel_proto_depIdxs = []int32{
	2, // 0: excel.ParseExcelResponse.products:type_name -> excel.ProductInfo
	0, // 1: excel.ExcelParseService.ParseExcel:input_type -> excel.ParseExcelRequest
	1, // 2: excel.ExcelParseService.ParseExcel:output_type -> excel.ParseExcelResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_excel_proto_init() }
func file_proto_excel_proto_init() {
	if File_proto_excel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_excel_proto_rawDesc), len(file_proto_excel_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_excel_proto_goTypes,
		DependencyIndexes: file_proto_excel_proto_depIdxs,
		MessageInfos:      file_proto_excel_proto_msgTypes,
	}.Build()
	File_proto_excel_proto = out.File
	file_proto_excel_proto_goTypes = nil
	file_proto_excel_proto_depIdxs = nil
}
